// ANIMACIONES EN CSS

/*
CON TRANSITION:
La transición consiste en animar un elemento desde un estado inicial a un estado final,
atravesando los estados intermedios (frames/fotogramas).

Por tanto, podemos animar SOLO:
  - Los elementos que tengan un estado inicial
  - Las propiedades de las cuales el navegador pueda deducir los valores intermedios
    entre los 2 estados: font-size, width, left, background-color… http://oli.jp/2010/css-animatable-properties/

La propiedad que nos permite animar es transition:

  .element {
    transition: [property] [duration] [ease] [delay]
  }

Transition:
  - Define cómo se realizará la transción al estado final del elemento.
  - Se iniciara cuando la [property] se modifique.
*/

/*
SIN TRANSITION NO HAY ANIMATION
*/
.circle {
  background-color: #ffc107;
  border: 2px solid #BD9016;
  width: 100px;
  height: 100px;
  border-radius: 100px;
  // transition: all 1s ease 500ms;
  /* transition:
        all 1s ease-in,
        background-color 2s ease-in,
        border 1s ease-in 3s; */
}

.circle:hover {
  width: 200px;
  height: 200px;
  background-color: pink;
  border: 10px solid red;
}

/*
CPU USAGE:
Las animaciones pueden consumir mucha CPU, las más 'performant' (60fps) son:
- transform:
  - translate (posición)
  - scale (tamaño)
  - rotate
- opacity (transparencia)
*/

.circle:hover {
  // transform: scale(2);
  // transform: translate(200px, 200px); // X, Y position
  // transform: translateX(-50%); // X, Y position
  // transform: rotate(180deg);
  // transform: translate(200px, 200px) scale(2) rotate(180deg);
  // opacity: 0.5;
  background-color: pink;
  border: 10px solid red;
}

/*
TRIGGERINGS:
- hover (arriba)
- class changes
*/

/*
Class change:
document.getElementsByClassName('circle')[0].classList.add("square");
*/
.square {
  border-radius: 0px;
}


























































:host {
  height: 800px;
  margin-top: 200px;
}

div {
  margin: 0 auto;
}

.circle {
  position: relative;
}

.circle p {
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #BD9016;
}

.sample, .car {
  height: 50px;
  width: 60%;
  margin-top: 50px;
  padding-left: 5%;
  background-color: #e8e7e7;
  border-radius: 2px;
  box-shadow: 1px 1px 3px grey;
}

.car {
  background-color: #d3d3d3;
  .mat-raised-button {
      float: right;
      height: 100%;
  }
}

h4 {
  display: inline-block;
  vertical-align: bottom;
}


